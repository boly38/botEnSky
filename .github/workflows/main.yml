# continuous integration
name: main

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the prod branch
  push:
    branches: [ main ]
  pull_request:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    strategy:
      matrix:
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
        node-version: [ 18.x ]

    environment: github_actions_bes
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          # version from package.json
          run_install: false

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v5
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'

      - name: Install dependencies
        run: |
          echo ::group::Install dependencies
          echo "install"
          pnpm --silent install 
          echo "show outdated (if any)"
          pnpm outdated --depth=3 || echo "::warning::üï∏Ô∏è you must think about update your dependencies :)"
          echo ::endgroup::

      - name: Run tests
        env:
          TZ: ${{ vars.TZ }}
          NODE_ENV: ${{ vars.NODE_ENV }}
          BLUESKY_SERVICE: ${{ vars.BLUESKY_SERVICE }}
          BLUESKY_USERNAME: ${{ vars.BLUESKY_USERNAME }}
          BLUESKY_PASSWORD: ${{ secrets.BLUESKY_PASSWORD }}
          BOT_ENGINE_MIN_INTERVAL_MS: ${{ secrets.BOT_ENGINE_MIN_INTERVAL_MS }}
          BOT_PLANTNET_SIMULATE: ${{ secrets.BOT_PLANTNET_SIMULATE }}
          BOT_TOKEN_SIMULATION: ${{ secrets.BOT_TOKEN_SIMULATION }}
          PLANTNET_API_PRIVATE_KEY: ${{ secrets.PLANTNET_API_PRIVATE_KEY }}
          UNSPLASH_ACCESS_KEY: ${{ secrets.UNSPLASH_ACCESS_KEY }}
          BOT_INACTIVITY_DELAY_MIN: 1
        run: pnpm ci-test

      - name: Report coverage
        if: github.event_name == 'pull_request'
        continue-on-error: true
        # uses: romeovs/lcov-reporter-action@v0.2.16 # https://github.com/romeovs/lcov-reporter-action/issues/10
        uses: andybelltree/lcov-reporter-action@v1.7.0 # https://github.com/andybelltree/lcov-reporter-action/releases
        with:
          github-token: ${{ secrets.GH_ACTIONS_TOKEN }}
          lcov-file: ./coverage/lcov.info
          filter-changed-files: true

      - name: Git deploy tag coverage report
        uses: peaceiris/actions-gh-pages@v4
        if: github.ref_type == 'tag'
        with:
          github_token: ${{ secrets.GH_ACTIONS_TOKEN }}
          publish_branch: gh-pages
          publish_dir: ./coverage/lcov-report
          user_name: 'github-actions[bot]'
          user_email: 'github-actions[bot]@users.noreply.github.com'
          commit_message: ${{ github.event.head_commit.message }}
          force_orphan: true